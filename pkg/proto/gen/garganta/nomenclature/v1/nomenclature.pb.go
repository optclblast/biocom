// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.6
// source: garganta/nomenclature/v1/nomenclature.proto

package v1

import (
	v1 "github.com/optclblast/biocom/pkg/proto/gen/garganta/storage/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetNomenclatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetNomenclatureRequest) Reset() {
	*x = GetNomenclatureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNomenclatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNomenclatureRequest) ProtoMessage() {}

func (x *GetNomenclatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNomenclatureRequest.ProtoReflect.Descriptor instead.
func (*GetNomenclatureRequest) Descriptor() ([]byte, []int) {
	return file_garganta_nomenclature_v1_nomenclature_proto_rawDescGZIP(), []int{0}
}

func (x *GetNomenclatureRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetNomenclatureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nomenclature []*Nomenclature `protobuf:"bytes,1,rep,name=nomenclature,proto3" json:"nomenclature,omitempty"`
}

func (x *GetNomenclatureResponse) Reset() {
	*x = GetNomenclatureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNomenclatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNomenclatureResponse) ProtoMessage() {}

func (x *GetNomenclatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNomenclatureResponse.ProtoReflect.Descriptor instead.
func (*GetNomenclatureResponse) Descriptor() ([]byte, []int) {
	return file_garganta_nomenclature_v1_nomenclature_proto_rawDescGZIP(), []int{1}
}

func (x *GetNomenclatureResponse) GetNomenclature() []*Nomenclature {
	if x != nil {
		return x.Nomenclature
	}
	return nil
}

type Nomenclature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Nomenclature:
	//
	//	*Nomenclature_StorageObject
	//	*Nomenclature_Service
	Nomenclature isNomenclature_Nomenclature `protobuf_oneof:"nomenclature"`
}

func (x *Nomenclature) Reset() {
	*x = Nomenclature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nomenclature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nomenclature) ProtoMessage() {}

func (x *Nomenclature) ProtoReflect() protoreflect.Message {
	mi := &file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nomenclature.ProtoReflect.Descriptor instead.
func (*Nomenclature) Descriptor() ([]byte, []int) {
	return file_garganta_nomenclature_v1_nomenclature_proto_rawDescGZIP(), []int{2}
}

func (m *Nomenclature) GetNomenclature() isNomenclature_Nomenclature {
	if m != nil {
		return m.Nomenclature
	}
	return nil
}

func (x *Nomenclature) GetStorageObject() *StorageObject {
	if x, ok := x.GetNomenclature().(*Nomenclature_StorageObject); ok {
		return x.StorageObject
	}
	return nil
}

func (x *Nomenclature) GetService() *Service {
	if x, ok := x.GetNomenclature().(*Nomenclature_Service); ok {
		return x.Service
	}
	return nil
}

type isNomenclature_Nomenclature interface {
	isNomenclature_Nomenclature()
}

type Nomenclature_StorageObject struct {
	StorageObject *StorageObject `protobuf:"bytes,1,opt,name=storage_object,json=storageObject,proto3,oneof"`
}

type Nomenclature_Service struct {
	Service *Service `protobuf:"bytes,2,opt,name=service,proto3,oneof"`
}

func (*Nomenclature_StorageObject) isNomenclature_Nomenclature() {}

func (*Nomenclature_Service) isNomenclature_Nomenclature() {}

type StorageObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Type:
	//
	//	*StorageObject_Product
	//	*StorageObject_AssemblyUnit
	//	*StorageObject_Component
	Type isStorageObject_Type `protobuf_oneof:"type"`
	// todo other info
	Storage *v1.Storage `protobuf:"bytes,5,opt,name=storage,proto3" json:"storage,omitempty"`
	Amount  float32     `protobuf:"fixed32,6,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *StorageObject) Reset() {
	*x = StorageObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageObject) ProtoMessage() {}

func (x *StorageObject) ProtoReflect() protoreflect.Message {
	mi := &file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageObject.ProtoReflect.Descriptor instead.
func (*StorageObject) Descriptor() ([]byte, []int) {
	return file_garganta_nomenclature_v1_nomenclature_proto_rawDescGZIP(), []int{3}
}

func (x *StorageObject) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *StorageObject) GetType() isStorageObject_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *StorageObject) GetProduct() *Product {
	if x, ok := x.GetType().(*StorageObject_Product); ok {
		return x.Product
	}
	return nil
}

func (x *StorageObject) GetAssemblyUnit() *AssemblyUnit {
	if x, ok := x.GetType().(*StorageObject_AssemblyUnit); ok {
		return x.AssemblyUnit
	}
	return nil
}

func (x *StorageObject) GetComponent() *Component {
	if x, ok := x.GetType().(*StorageObject_Component); ok {
		return x.Component
	}
	return nil
}

func (x *StorageObject) GetStorage() *v1.Storage {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *StorageObject) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type isStorageObject_Type interface {
	isStorageObject_Type()
}

type StorageObject_Product struct {
	Product *Product `protobuf:"bytes,2,opt,name=product,proto3,oneof"`
}

type StorageObject_AssemblyUnit struct {
	AssemblyUnit *AssemblyUnit `protobuf:"bytes,3,opt,name=assembly_unit,json=assemblyUnit,proto3,oneof"`
}

type StorageObject_Component struct {
	Component *Component `protobuf:"bytes,4,opt,name=component,proto3,oneof"`
}

func (*StorageObject_Product) isStorageObject_Type() {}

func (*StorageObject_AssemblyUnit) isStorageObject_Type() {}

func (*StorageObject_Component) isStorageObject_Type() {}

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id          string                        `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Composition []*StoreObjectCompositionUnit `protobuf:"bytes,3,rep,name=composition,proto3" json:"composition,omitempty"`
	// todo
	CreatedAt uint32 `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt uint32 `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt uint32 `protobuf:"varint,7,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	Barcode   string `protobuf:"bytes,8,opt,name=barcode,proto3" json:"barcode,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_garganta_nomenclature_v1_nomenclature_proto_rawDescGZIP(), []int{4}
}

func (x *Product) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Product) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Product) GetComposition() []*StoreObjectCompositionUnit {
	if x != nil {
		return x.Composition
	}
	return nil
}

func (x *Product) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Product) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Product) GetDeletedAt() uint32 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *Product) GetBarcode() string {
	if x != nil {
		return x.Barcode
	}
	return ""
}

type StoreObjectCompositionUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount      float32        `protobuf:"fixed32,1,opt,name=amount,proto3" json:"amount,omitempty"`
	StoreObject *StorageObject `protobuf:"bytes,2,opt,name=store_object,json=storeObject,proto3" json:"store_object,omitempty"`
}

func (x *StoreObjectCompositionUnit) Reset() {
	*x = StoreObjectCompositionUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreObjectCompositionUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreObjectCompositionUnit) ProtoMessage() {}

func (x *StoreObjectCompositionUnit) ProtoReflect() protoreflect.Message {
	mi := &file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreObjectCompositionUnit.ProtoReflect.Descriptor instead.
func (*StoreObjectCompositionUnit) Descriptor() ([]byte, []int) {
	return file_garganta_nomenclature_v1_nomenclature_proto_rawDescGZIP(), []int{5}
}

func (x *StoreObjectCompositionUnit) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *StoreObjectCompositionUnit) GetStoreObject() *StorageObject {
	if x != nil {
		return x.StoreObject
	}
	return nil
}

type AssemblyUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Composition []*StoreObjectCompositionUnit `protobuf:"bytes,3,rep,name=composition,proto3" json:"composition,omitempty"`
}

func (x *AssemblyUnit) Reset() {
	*x = AssemblyUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssemblyUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssemblyUnit) ProtoMessage() {}

func (x *AssemblyUnit) ProtoReflect() protoreflect.Message {
	mi := &file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssemblyUnit.ProtoReflect.Descriptor instead.
func (*AssemblyUnit) Descriptor() ([]byte, []int) {
	return file_garganta_nomenclature_v1_nomenclature_proto_rawDescGZIP(), []int{6}
}

func (x *AssemblyUnit) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AssemblyUnit) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AssemblyUnit) GetComposition() []*StoreObjectCompositionUnit {
	if x != nil {
		return x.Composition
	}
	return nil
}

type Component struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Component) Reset() {
	*x = Component{}
	if protoimpl.UnsafeEnabled {
		mi := &file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Component) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Component) ProtoMessage() {}

func (x *Component) ProtoReflect() protoreflect.Message {
	mi := &file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Component.ProtoReflect.Descriptor instead.
func (*Component) Descriptor() ([]byte, []int) {
	return file_garganta_nomenclature_v1_nomenclature_proto_rawDescGZIP(), []int{7}
}

func (x *Component) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Component) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_garganta_nomenclature_v1_nomenclature_proto_rawDescGZIP(), []int{8}
}

func (x *Service) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Service) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_garganta_nomenclature_v1_nomenclature_proto protoreflect.FileDescriptor

var file_garganta_nomenclature_v1_nomenclature_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x67, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74, 0x61, 0x2f, 0x6e, 0x6f, 0x6d, 0x65, 0x6e,
	0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x6d, 0x65, 0x6e,
	0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x67,
	0x61, 0x72, 0x67, 0x61, 0x6e, 0x74, 0x61, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x21, 0x67, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74,
	0x61, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2a, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x65, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6d,
	0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4a, 0x0a, 0x0c, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x61, 0x72, 0x67, 0x61, 0x6e,
	0x74, 0x61, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x0c, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xaf, 0x01,
	0x0a, 0x0c, 0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x50,
	0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74,
	0x61, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48,
	0x00, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x3d, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x67, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74, 0x61, 0x2e, 0x6e, 0x6f, 0x6d,
	0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22,
	0xca, 0x02, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x3d, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74, 0x61, 0x2e, 0x6e, 0x6f,
	0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x48, 0x00, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x4d, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x5f, 0x75, 0x6e, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x61, 0x72, 0x67, 0x61, 0x6e,
	0x74, 0x61, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x48,
	0x00, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x43, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74, 0x61, 0x2e, 0x6e, 0x6f,
	0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74, 0x61,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xfc, 0x01, 0x0a,
	0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x56, 0x0a, 0x0b,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x67, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74, 0x61, 0x2e, 0x6e, 0x6f, 0x6d,
	0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x1a,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x61, 0x72, 0x67, 0x61,
	0x6e, 0x74, 0x61, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x8a,
	0x01, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x56, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x61, 0x72, 0x67, 0x61,
	0x6e, 0x74, 0x61, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2f, 0x0a, 0x09, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x07,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0x91, 0x01, 0x0a, 0x17,
	0x47, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74, 0x61, 0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x41, 0x50, 0x49, 0x12, 0x76, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x30, 0x2e, 0x67, 0x61, 0x72,
	0x67, 0x61, 0x6e, 0x74, 0x61, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x67,
	0x61, 0x72, 0x67, 0x61, 0x6e, 0x74, 0x61, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6d, 0x65, 0x6e,
	0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70,
	0x74, 0x63, 0x6c, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2f, 0x62, 0x69, 0x6f, 0x63, 0x6f, 0x6d, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x61,
	0x72, 0x67, 0x61, 0x6e, 0x74, 0x61, 0x2f, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_garganta_nomenclature_v1_nomenclature_proto_rawDescOnce sync.Once
	file_garganta_nomenclature_v1_nomenclature_proto_rawDescData = file_garganta_nomenclature_v1_nomenclature_proto_rawDesc
)

func file_garganta_nomenclature_v1_nomenclature_proto_rawDescGZIP() []byte {
	file_garganta_nomenclature_v1_nomenclature_proto_rawDescOnce.Do(func() {
		file_garganta_nomenclature_v1_nomenclature_proto_rawDescData = protoimpl.X.CompressGZIP(file_garganta_nomenclature_v1_nomenclature_proto_rawDescData)
	})
	return file_garganta_nomenclature_v1_nomenclature_proto_rawDescData
}

var file_garganta_nomenclature_v1_nomenclature_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_garganta_nomenclature_v1_nomenclature_proto_goTypes = []interface{}{
	(*GetNomenclatureRequest)(nil),     // 0: garganta.nomenclature.v1.GetNomenclatureRequest
	(*GetNomenclatureResponse)(nil),    // 1: garganta.nomenclature.v1.GetNomenclatureResponse
	(*Nomenclature)(nil),               // 2: garganta.nomenclature.v1.Nomenclature
	(*StorageObject)(nil),              // 3: garganta.nomenclature.v1.StorageObject
	(*Product)(nil),                    // 4: garganta.nomenclature.v1.Product
	(*StoreObjectCompositionUnit)(nil), // 5: garganta.nomenclature.v1.StoreObjectCompositionUnit
	(*AssemblyUnit)(nil),               // 6: garganta.nomenclature.v1.AssemblyUnit
	(*Component)(nil),                  // 7: garganta.nomenclature.v1.Component
	(*Service)(nil),                    // 8: garganta.nomenclature.v1.Service
	(*v1.Storage)(nil),                 // 9: garganta.storage.v1.Storage
}
var file_garganta_nomenclature_v1_nomenclature_proto_depIdxs = []int32{
	2,  // 0: garganta.nomenclature.v1.GetNomenclatureResponse.nomenclature:type_name -> garganta.nomenclature.v1.Nomenclature
	3,  // 1: garganta.nomenclature.v1.Nomenclature.storage_object:type_name -> garganta.nomenclature.v1.StorageObject
	8,  // 2: garganta.nomenclature.v1.Nomenclature.service:type_name -> garganta.nomenclature.v1.Service
	4,  // 3: garganta.nomenclature.v1.StorageObject.product:type_name -> garganta.nomenclature.v1.Product
	6,  // 4: garganta.nomenclature.v1.StorageObject.assembly_unit:type_name -> garganta.nomenclature.v1.AssemblyUnit
	7,  // 5: garganta.nomenclature.v1.StorageObject.component:type_name -> garganta.nomenclature.v1.Component
	9,  // 6: garganta.nomenclature.v1.StorageObject.storage:type_name -> garganta.storage.v1.Storage
	5,  // 7: garganta.nomenclature.v1.Product.composition:type_name -> garganta.nomenclature.v1.StoreObjectCompositionUnit
	3,  // 8: garganta.nomenclature.v1.StoreObjectCompositionUnit.store_object:type_name -> garganta.nomenclature.v1.StorageObject
	5,  // 9: garganta.nomenclature.v1.AssemblyUnit.composition:type_name -> garganta.nomenclature.v1.StoreObjectCompositionUnit
	0,  // 10: garganta.nomenclature.v1.GargantaNomenclatureAPI.GetNomenclature:input_type -> garganta.nomenclature.v1.GetNomenclatureRequest
	1,  // 11: garganta.nomenclature.v1.GargantaNomenclatureAPI.GetNomenclature:output_type -> garganta.nomenclature.v1.GetNomenclatureResponse
	11, // [11:12] is the sub-list for method output_type
	10, // [10:11] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_garganta_nomenclature_v1_nomenclature_proto_init() }
func file_garganta_nomenclature_v1_nomenclature_proto_init() {
	if File_garganta_nomenclature_v1_nomenclature_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNomenclatureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNomenclatureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nomenclature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreObjectCompositionUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssemblyUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Component); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Nomenclature_StorageObject)(nil),
		(*Nomenclature_Service)(nil),
	}
	file_garganta_nomenclature_v1_nomenclature_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*StorageObject_Product)(nil),
		(*StorageObject_AssemblyUnit)(nil),
		(*StorageObject_Component)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_garganta_nomenclature_v1_nomenclature_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_garganta_nomenclature_v1_nomenclature_proto_goTypes,
		DependencyIndexes: file_garganta_nomenclature_v1_nomenclature_proto_depIdxs,
		MessageInfos:      file_garganta_nomenclature_v1_nomenclature_proto_msgTypes,
	}.Build()
	File_garganta_nomenclature_v1_nomenclature_proto = out.File
	file_garganta_nomenclature_v1_nomenclature_proto_rawDesc = nil
	file_garganta_nomenclature_v1_nomenclature_proto_goTypes = nil
	file_garganta_nomenclature_v1_nomenclature_proto_depIdxs = nil
}
